@using Syncfusion.Blazor.DropDowns
@inherits LayoutComponentBase

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-4">
        <div class="control_wrapper">
            <SfMultiSelect TValue="string[]" Mode="@VisualMode.CheckBox" Placeholder="Select a geography" DataSource="@GeographyList" ShowSelectAll="@ShowSelectAllCheckBox"
                           EnableSelectionOrder="@EnableSelectionOrders" FilterBarPlaceholder="My active data-security requirements" EnableGroupCheckBox="@EnableCheckBox" PopupHeight="350px">
                <MultiSelectFieldSettings GroupBy="Category" Value="Geography"></MultiSelectFieldSettings>
            </SfMultiSelect>
        </div>
        <a href="http://blazor.net" target="_blank" class="ml-md-auto">About</a>

    </div>

    <div class="content px-4">
        @Body
    </div>
</div>

@code{
    public bool ShowSelectAllCheckBox { get; set; } = true;
    public bool EnableSelectionOrders { get; set; } = false;
    public bool EnableCheckBox { get; set; } = true;
    public class GeographyItem
    {
        public string Geography { get; set; }
        public string Category { get; set; }
        public string ID { get; set; }
    }
    List<GeographyItem> GeographyList = new List<GeographyItem>()
{
        new GeographyItem() { Category = "Custom", Geography = "Consolidated Health",  ID = "custom1" },
        new GeographyItem() { Category = "Custom", Geography = "Consolidated Background",  ID = "custom2" },
        new GeographyItem() { Category = "Custom", Geography = "Consolidated Education",  ID = "custom3" },
        new GeographyItem() { Category = "Custom", Geography = "Consolidated Finance",  ID = "custom4" },
        new GeographyItem() { Category = "Custom", Geography = "Consolidated Citizen Tools",  ID = "custom5" },
        new GeographyItem() { Category = "Custom", Geography = "Consolidated Demographic",  ID = "custom6" },

        new GeographyItem() { Category = "Americas", Geography = "United States",  ID = "Americas-US" },
        new GeographyItem() { Category = "Americas", Geography = "Canada",  ID = "Americas-CA" },
        new GeographyItem() { Category = "Americas", Geography = "Brazil",  ID = "Americas-BR" },
        new GeographyItem() { Category = "Americas", Geography = "Mexico",  ID = "Americas-MX" },
        new GeographyItem() { Category = "Europe", Geography = "Europe",  ID = "Europe-EU" },
        new GeographyItem() { Category = "Europe", Geography = "France",  ID = "Europe-FR" },
        new GeographyItem() { Category = "Europe", Geography = "United Kingdom",  ID = "Europe-UK" },
        new GeographyItem() { Category = "Europe", Geography = "Germany",  ID = "Europe-GE" },
        new GeographyItem() { Category = "Europe", Geography = "Switzerland",  ID = "Europe-SW" },
        new GeographyItem() { Category = "Europe", Geography = "Norway",  ID = "Europe-NO" },
        new GeographyItem() { Category = "Europe", Geography = "Spain",  ID = "Europe-SP" },
        new GeographyItem() { Category = "Europe", Geography = "Poland",  ID = "Europe-PO" },
        new GeographyItem() { Category = "Asia Pacific", Geography = "Asia Pacific",  ID = "AsiaPacific-AP" },
        new GeographyItem() { Category = "Asia Pacific", Geography = "Australia",  ID = "AsiaPacific-AP" },
        new GeographyItem() { Category = "Asia Pacific", Geography = "China",  ID = "AsiaPacific-CH" },
        new GeographyItem() { Category = "Asia Pacific", Geography = "India",  ID = "AsiaPacific-IN" },
        new GeographyItem() { Category = "Asia Pacific", Geography = "Japan",  ID = "AsiaPacific-JP" },
        new GeographyItem() { Category = "Asia Pacific", Geography = "Korea",  ID = "AsiaPacific-KO" },
        new GeographyItem() { Category = "Asia Pacific", Geography = "New Zealand",  ID = "AsiaPacific-NZ" },
        new GeographyItem() { Category = "Middle East and Africa", Geography = "Africa",  ID = "MiddleEast-Africa" },
        new GeographyItem() { Category = "Middle East and Africa", Geography = "Israel",  ID = "MiddleEast-Israel" },
        new GeographyItem() { Category = "Middle East and Africa", Geography = "United Arab Emerates",  ID = "MiddleEast-UAE" },
        new GeographyItem() { Category = "Middle East and Africa", Geography = "Qatar",  ID = "MiddleEast-Qatar" },
    };
}
<style>





























    .control_wrapper {
        width: 350px;
        margin: 0 auto;
        padding-top: 70px;
    }
</style>
